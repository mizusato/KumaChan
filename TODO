TODO

- API: type Provider[T,A] (Computed[T], Sink[A]);

- API: consider renaming wait and tick

- Atom: tree-sitter parser update

- Rx: reactive: morph with custom update behavior

- Lang: revise overloading rule (consider introducing input-based precedence)

- Lang: consider prefix for special identifier used by compiler (e.g. @DefaultValue)

- Lang: permit anonymous record expression (currently requires explicit type)

- Lang: type inference for field of anonymous record input

- Lang: fix the order randomness of field assignment of anonymous record input

- Lang: consider renaming Product -> Record, Sum -> Enum

- Compiler: revise FuncInfo.SourceMap (try to reduce space usage)

- KMD: migrate to new numeric types, add other primitives

- Type: enum supertype: enum { ...Another, type Added; }

- KMD: data-validate only for protected/opaque types

- KMD: automatic validator call when boxing a value (box to Maybe[T])

- Data: should all value be pointer/primitive? (aka no non-primitive value type)

- Lang: Path/To/Function as namespace?

- API: revise Reactive[FlexList[T]] methods, consider methods for Reactive[Map[K,V]]

- API: to be semantic: tuple input --> record input

- API: revise resource management of files, ... (consider Disposable[T] monad)

- API: categorize API functions according to usage, corresponding types, ...

- API: better native function names

- API: separate string APIs from `api/container.go` and `lib/container/string.go`

- GUI: qtbinding C side int vs. go side int (not the same type, fix it)

- GUI: setAttributeNS() for SVG elements

- GUI: crash report window

- GUI: support: menu, toolbar, popupmenu, modal dialog

