type Framework enum {
    type React;
    type Vue;
    type Angular;
    type Polymer;
    type Svelte;
    type Elm;
    type Purescript;
};

export function get-color:
    &(Framework) => String
    &(framework) =>
        switch framework:
        case React,Elm: 'lightblue',
        case Angular,Svelte: 'red',
        case Vue: 'green',
        case Polymer: 'pink',
        case Purescript: 'black',
        end;

do
    let checklist := [
        (React, 'lightblue'),
        (Vue, 'green'),
        (Angular, 'red'),
        (Polymer, 'pink'),
        (Svelte, 'red'),
        (Elm, 'lightblue'),
        (Purescript, 'black')
    ],
    let ok := checklist
        . { every &(framework, color) =>
            (framework.{get-color} = color) },
    { println { str ok } }
    . { catch &(err) => { crash err } };
