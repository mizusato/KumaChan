type Name {
    first: String,
    last:  String
};

do webui-init 'Name' DOM;

do WebUi::ExitWhenWindowClosed;

private function cpt-label: ( &(String) NoExcept*[WebUi::Node] )
    ( &(text) (yield (dom-node 'span' text)) );

private function cpt-button: ( &(String,WebUi::EventSink) NoExcept*[WebUi::Node] )
    ( &(title,sink) (yield (dom-node 'button' {
        content: (dom-text title),
        events:  (dom-event 'click' sink)
    })) );

private function cpt-text-input: ( &(Reactive[String]) NoExcept*[WebUi::Node] )
    ( &(@value)
        ~ map* &(value) := watch @value,
        dom-node 'input' (dom-styles [])
            (dom-attrs [('value',value)])
            (dom-event 'input'
                (dom-event-sink @value (&(ev)(ev.get-string 'value'))))
            (dom-children [])
    );

private const DOM: NoExcept*[WebUi::Node]
    ~ with-reactive* &(name) := Name { first: '', last: '' },
    let {first,last} := name,
    dom-dynamic 'div' [('padding','0.5rem 0.5rem')] [
        dom-dynamic 'div' [
            cpt-label 'First Name:',
            cpt-text-input first,
            cpt-button 'clear' (dom-callback (& _ (first.update (& _ ''))))
        ],
        dom-dynamic 'div' [
            cpt-label 'Last Name:',
            cpt-text-input last,
            cpt-button 'clear' (dom-callback (& _ (last.update (& _ ''))))
        ],
        dom-dynamic 'p' [
            cpt-label 'Full Name:',
            (~ map* &{first,last} := watch name,
                (dom-node 'span'
                    [('color','red'),('border','1px solid red'),('padding','0px 5px')]
                    ("# #" first last)))
        ]
    ];
