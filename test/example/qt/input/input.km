type Data {
    a: Bool,
    b: String,
    c: String,
    d: String
};

do Window.show
    | then (Window.move-to-screen-center);

do Window.closed.listen (&(_)(exit 0));

do
    let default-article := 'Lorem Ipsum',
    ~ with-reactive &(data) := Data { a: No, b: 'Hello', c: '', d: default-article },
    let {a,b,c,d} := data,
    let apply-bindings := merge [
        bind InputCheckBox a checked set-checked,
        bind InputComboBox b current-text set-current-text,
        bind InputLineEdit c text set-text,
        ButtonClear.clicked.concat-map (&(_)(c.update (&(_)('')))),
        InputPlainTextEdit.set-plain-text default-article,
        InputPlainTextEdit.plain-text.concat-map (&(text)(d.update (&(_)(text)))),
        a.watch.concat-map (&(a)(ValueCheckBox.set-text (if a: 'Yes', else: 'No'))),
        b.watch.concat-map (&(b)(ValueComboBox.set-text b)),
        c.watch.concat-map (&(c)(ValueLineEdit.set-text c)),
        d.watch.concat-map (&(d)(ValuePlainTextEdit.set-text d))
    ],
    apply-bindings.forever;
