import assets from './assets';

do ui-init 'Computed' Root;

do ui-inject-css [assets::style-css];

do ui-exit-when-window-closed;

public function float-input: ( &(Reactive[Maybe[Float]]) UI::Component )
    ( &(value)
        ~ use &(buffer) := ui-state '',
        ui-text-input buffer
            | with ((buffer.watch.concat-map ( &(string)  // TODO: connect
                $(value <- (parse-float string)))).forever)
    );

private const Root: UI::Component
    let container := styled ui-container ['container'],
    let row := styled ui-container ['row'],
    ~ use &(price) := ui-state (Just 0.0),
    ~ use &(quantity) := ui-state (Just 0.0),
    let total := computed ((watch price), (watch quantity)) ( &(price?, quantity?)
        ~ maybe? &(price) := price?,
        ~ maybe? &(quantity) := quantity?,
        Just $(price * quantity)
    ),
    container [
        row [ ui-label 'Price:', float-input price ],
        row [ ui-label 'Quantity:', float-input quantity ],
        ui-text (
            ~ map &(total?) := total,
            switch total?:
            case Just total:
                "Total = #" (str total),
            case N/A:
                'invalid input',
            end
        )
    ];
