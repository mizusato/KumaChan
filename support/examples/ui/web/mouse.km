import window from './window';

do { window::mount Root };

// TODO: mouse enter => Just pos, mouse out => Null
function MousePosition:
    &() => ui::Hook[Source[(Real,Real)]]
    &() => &(k) =>
        & pos := do { create-bus::[(Real,Real)] () },
        & id := do { gen-monotonic-id-string () },
        let cpt := { k { watch pos } },
        (cpt with { Event ({ "mousemove.hook#" id },
            & x := extract-float 'webuiCurrentTargetX',
            & y := extract-float 'webuiCurrentTargetY',
            { trigger (pos <- (x, y)) }
        )});

const Root: ui::Component :=
    let container := { StyledContainer ['container'] },
    let box := { StyledContainer ['box'] },
    { container [
        & pos := use MousePosition,
        { box [
            pos
                . { map &(x,y) => { "x=#, y=#" (x.{str}, y.{str}) } }
                . { start-with [''] }
                . { Label }
        ] }
    ] };
