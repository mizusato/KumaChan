import assets from './assets';

type Todo {
    content:  String,
    finished: Bool
};


do ui-init 'Reactive List' Root;

do ui-inject-css [assets::style-css];

do ui-exit-when-window-closed;

private const Root: UI::Component
    let center := styled ui-container ['center'],
    let row := styled ui-container ['row'],
    ~ use &(list) := ui-state (empty-list:[Todo]),
    let add-item-from: (&(Reactive[String])(NoExcept[-])) := ( &(buffer)
        ~ await &(content) := buffer.read,
        ~ await &(id) := gen-sequential-id,
        ~ await list.append (id, (Todo { content, finished: No })),
        buffer.write('')
    ),
    center [
        ~ use &(buffer) := ui-state '',
        row [
            ui-text-input buffer,
            ui-button 'Add' (add-item-from buffer)
        ],
        ~ use &(id, index, item) := ui-list list,
        let { content, finished } := item,
        row [
            ui-checkbox finished,
            ui-text-input content,
            row [
                ui-button 'Up' (list.move-up id)
                    | with (ui-show-if (not $(index is-first-in list))),
                ui-button 'Down' (list.move-down id)
                    | with (ui-show-if (not $(index is-last-in list))),
                ui-button 'Remove' (list.delete id)
            ]
        ]
    ];
