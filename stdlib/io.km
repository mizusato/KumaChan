module I/O;

type InputStream   native;
type OutputStream  native;
type Error {
    message: String
};

public function read {
    `InputStream => Effect[Bytes,Error]:
    native 'read'
};

public function write {
    `(OutputStream, Effect[Bytes,Error]) => Effect[(),Error]:
    native 'write'
};

public function write-bytes {
    `(OutputStream, Bytes) => Effect[Int, Error]:
    native 'write-bytes'
};

public function write-string {
    `(OutputStream, String) => Effect[(), Error]:
    native 'write-string'
};

public function write-line {
    `(OutputStream, String) => Effect[(), Error]:
    native 'write-line'
};

// print-line, ...
