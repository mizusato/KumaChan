/// Service instance type.
type instance
    native;

/// Service constructor argument type.
type argument
    UserDefinedServiceArgument;

/// Service constructor type.
type constructor
    &(argument, rpc::Connection) => Action[instance,Error];

/// Service destructor type
type destructor[T]
    implicit
    { delete: &(T) => Action };

/// Service consumer type.
type consumer
    &(instance) => Action;

/// Service methods, the implicit context used when creating service instances.
type methods[instance]
    implicit { user-defined-service-method: signature };

/// Service identifier, used when calling RPC API functions.
export const identifier:
    rpc::ServiceIdentifier[instance,argument,constructor,consumer];

/// Creates a service instance from a T object and an implicit methods[T].
export function create:
    [T] (destructor[T],methods[T])
    &(T) => instance;

