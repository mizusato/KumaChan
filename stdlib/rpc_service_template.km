/// Service instance type.
type Instance
    native;

/// Service constructor argument type.
type Argument
    UserDefinedServiceArgument;

/// Service constructor type.
type Constructor
    &(Argument, rpc::Connection) => Action[Instance,Error];

/// Service destructor type
type Destructor[T]
    implicit
    { delete: &(T) => Action };

/// Service consumer type.
type Consumer
    &(Instance) => Action;

/// Service methods, the implicit context used when creating service instances.
type Methods[Instance]
    implicit { user-defined-service-method: signature };

/// Service identifier, used when calling RPC API functions.
export const Identifier:
    rpc::ServiceIdentifier[Instance,Argument,Constructor,Consumer];

/// Creates a service instance from a T object and an implicit methods[T].
export function create:
    [T] (Destructor[T],Methods[T])
    &(T) => Instance;
