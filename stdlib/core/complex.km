type Complex native;

public function complex: (&(Float,Float)(Complex)) native 'complex';
public function   polar: (&(Float,Float)(Complex)) native 'polar';

public function from: ( &(Complex) String)
    ( &(z) ("(# + #i)" (get-real(z).str) (get-imag(z).str)) );

public function get-conj: (&(Complex)(Complex))  native 'get-conj';
public function get-real: (&(Complex)(Float))    native 'get-real';
public function get-imag: (&(Complex)(Float))    native 'get-imag';
public function get-norm: (&(Complex)(Float))    native 'get-norm';
public function get-arg:  (&(Complex)(Float))    native 'get-arg';

public function get-conj: (&(Maybe[Complex])(Maybe[Complex]))  native 'get-conj?';
public function get-real: (&(Maybe[Complex])(Maybe[Float]))    native 'get-real?';
public function get-imag: (&(Maybe[Complex])(Maybe[Float]))    native 'get-imag?';
public function get-norm: (&(Maybe[Complex])(Maybe[Float]))    native 'get-norm?';
public function get-arg:  (&(Maybe[Complex])(Maybe[Float]))    native 'get-arg?';

public function +: (&(Complex,Complex)(Complex))  native '+complex';
public function +: (&(Float,Complex)(Complex))    native 'f+complex';
public function +: (&(Complex,Float)(Complex))    native 'complex+f';
public function -: (&(Complex,Complex)(Complex))  native '-complex';
public function -: (&(Float,Complex)(Complex))    native 'f-complex';
public function -: (&(Complex,Float)(Complex))    native 'complex-f';
public function -: (&(Complex)(Complex))          (&(z)$(-1.0 * z));
public function *: (&(Complex,Complex)(Complex))  native '*complex';
public function *: (&(Float,Complex)(Complex))    native 'f*complex';
public function *: (&(Complex,Float)(Complex))    native 'complex*f';
public function /: (&(Complex,Complex)(Complex))  native '/complex';
public function /: (&(Float,Complex)(Complex))    native 'f/complex';
public function /: (&(Complex,Float)(Complex))    native 'complex/f';

public function +: (&(Maybe[Complex],Maybe[Complex])(Maybe[Complex]))  native '+complex?';
public function +: (&(Maybe[Float],Maybe[Complex])(Maybe[Complex]))    native 'f+complex?';
public function +: (&(Maybe[Complex],Maybe[Float])(Maybe[Complex]))    native 'complex+f?';
public function -: (&(Maybe[Complex],Maybe[Complex])(Maybe[Complex]))  native '-complex?';
public function -: (&(Maybe[Float],Maybe[Complex])(Maybe[Complex]))    native 'f-complex?';
public function -: (&(Maybe[Complex],Maybe[Float])(Maybe[Complex]))    native 'complex-f?';
public function -: (&(Maybe[Complex])(Maybe[Complex]))                 (&(z)$((Just 0.0) - z));
public function *: (&(Maybe[Complex],Maybe[Complex])(Maybe[Complex]))  native '*complex?';
public function *: (&(Maybe[Float],Maybe[Complex])(Maybe[Complex]))    native 'f*complex?';
public function *: (&(Maybe[Complex],Maybe[Float])(Maybe[Complex]))    native 'complex*f?';
public function /: (&(Maybe[Complex],Maybe[Complex])(Maybe[Complex]))  native '/complex?';
public function /: (&(Maybe[Float],Maybe[Complex])(Maybe[Complex]))    native 'f/complex?';
public function /: (&(Maybe[Complex],Maybe[Float])(Maybe[Complex]))    native 'complex/f?';

public function sqrt: (&(Complex)(Complex))  native 'complex-sqrt';
public function cbrt: (&(Complex)(Complex))  native 'complex-cbrt';
public function  exp: (&(Complex)(Complex))  native 'complex-exp';
public function  log: (&(Complex)(Complex))  native 'complex-log';
public function  sin: (&(Complex)(Complex))  native 'complex-sin';
public function  cos: (&(Complex)(Complex))  native 'complex-cos';
public function  tan: (&(Complex)(Complex))  native 'complex-tan';
public function asin: (&(Complex)(Complex))  native 'complex-asin';
public function acos: (&(Complex)(Complex))  native 'complex-acos';
public function atan: (&(Complex)(Complex))  native 'complex-atan';

public function sqrt: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-sqrt?';
public function cbrt: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-cbrt?';
public function  exp: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-exp?';
public function  log: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-log?';
public function  sin: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-sin?';
public function  cos: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-cos?';
public function  tan: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-tan?';
public function asin: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-asin?';
public function acos: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-acos?';
public function atan: (&(Maybe[Complex])(Maybe[Complex]))  native 'complex-atan?';
