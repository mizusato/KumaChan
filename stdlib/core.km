module Core;


/**
 *  IMPORTANT: The following type definitions should be kept update
 *             with `loader/symbol.go` and `checker/special.go`.
 */

// Basic Types
type Bit    native;
type Byte   native;
type Word   native;
type Dword  native;
type Qword  native;
type Integer  native;
type Float64  native;

// Container Types
type Bytes     native;
type String    native;
type Seq[T]    native;
type Array[T]  native;
type Heap[T]   native;
type Set[T]    native;
type Map[K,V]  native;

// Effect Type
type Effect[T,E]  native;

// Fixed Integer Types
type Int64   Qword;
type Uint64  Qword;
type Int32   Dword;
type Uint32  Dword;
type Int16   Word;
type Uint16  Word;
type Int8    Byte;
type Uint8   Byte;

// Basic Boxed Types
type Char     Dword;
type Natural  protected Integer;
type Float    protected Float64;

// Basic Sum Types
type Bool union {
    type Yes;
    type No;
};
type Maybe[T] union {
    type Just T;
    type N/A;
};
type Result[T,E] union {
    type OK T;
    type NG E;
};
