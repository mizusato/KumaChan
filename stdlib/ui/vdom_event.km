type EventPayload native;  // *qt.WebUiEventPayload (contains a C++ pointer)
type EventHandler native;  // *vdom.EventHandler

private function dom-event-handler[T]: ( &(Sink[T],(&(EventPayload)(T))) EventHandler )
    native 'ui-dom-event-handler';
private function dom-event-handler[T]: ( &(Reactive[T],(&(T)(&(EventPayload)(T)))) EventHandler )
    native 'ui-dom-event-handler-reactive';

private function getter-callback[T]:
    ( &(String,(&(EventPayload,String)(T)),(&(T)(Callback))) Callback )
    ( &(prop,getter,k)
        Callback ( &(ev)
            let next := (k (ev.getter(prop))),
            next ev
        )
    );

private function get-string: ( &(EventPayload,String) String )
    native 'ui-event-payload-get-string';
private function get-float: ( &(EventPayload,String) Float )
    native 'ui-event-payload-get-float';
private function get-number: ( &(EventPayload,String) Number )
    native 'ui-event-payload-get-number';
private function get-bool: ( &(EventPayload,String) Bool )
    native 'ui-event-payload-get-bool';

private function dom-event: ( &(String,EventHandler) Events )
    ( &(name,handler)
        dom-events [(name,handler)]
    );
