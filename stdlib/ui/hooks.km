type Hook[T]
    &(&(T) => Component) => Component;

export function use:[T]
    &(Hook[T], &(T) => Component) => Component
    &(hook, k) => { hook(k) };

export function State:[T]
    &(T) => Hook[Reactive[T]]
    &(initial) => &(k) =>
        & r := do { create-reactive initial },
        { k(r) };

