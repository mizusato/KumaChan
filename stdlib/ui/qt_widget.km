// QWidget
type Widget protected Object;

private function show: (&(Widget)(NoExcept[-]))
    native 'qt-show';

private function move-to-screen-center: (&(Widget)(NoExcept[-]))
    native 'qt-move-to-screen-center';


// QMainWindow
type MainWindow protected Widget;


// QLabel
type Label protected Widget;

private function set-text: ( &(Label,String) NoExcept[-] )
    (&(label,text)(set-property label 'text' 'String' text));


// QLineEdit
type LineEdit protected Widget;

private function get-text: ( &(Static[LineEdit]) String )
    (&(line)(get-property line 'text' 'String'));

private function text: ( &(LineEdit) Signal[String] )
    (&(line)(signal line 'textEdited(const QString&)' get-text));

private function enter: ( &(LineEdit) Signal[-] )
    (&(line)(signal line 'returnPressed()'));

private function set-text: ( &(LineEdit,String) NoExcept[-] )
    (&(line,text)(set-property line 'text' 'String' text));


// QPlainTextEdit
type PlainTextEdit protected Widget;

private function get-plain-text: ( &(Static[PlainTextEdit]) String )
    (&(plain)(get-property plain 'plainText' 'String'));

// no user edit signal
private function plain-text: ( &(PlainTextEdit) Signal[String] )
    (&(plain)(signal plain 'textChanged()' get-plain-text));

private function set-plain-text: ( &(PlainTextEdit,String) NoExcept[-] )
    (&(plain,text)(set-property plain 'plainText' 'String' text));


// QPushButton
type PushButton protected Widget;

private function clicked: ( &(PushButton) Signal[-] )
    (&(button)(signal button 'clicked()'));


// QCheckBox
type CheckBox protected Widget;

private function get-checked: ( &(Static[CheckBox]) Bool )
    (&(checkbox)(get-property checkbox 'checked' 'Bool'));

private function checked: ( &(CheckBox) Signal[Bool] )
    (&(checkbox)(signal checkbox 'clicked(bool)' get-checked));

private function set-checked: ( &(CheckBox,Bool) NoExcept[-] )
    (&(checkbox,checked)(set-property checkbox 'checked' 'Bool' checked));


// QComboBox
type ComboBox protected Widget;

private function get-current-text: ( &(Static[ComboBox]) String )
    (&(combo)(get-property combo 'currentText' 'String'));

private function current-text: ( &(ComboBox) Signal[String] )
    (&(combo)(signal combo 'currentTextChanged(const QString&)' get-current-text));

private function set-current-text: ( &(ComboBox,String) NoExcept[-] )
    (&(combo,text)(set-property combo 'currentText' 'String' text));


// QListWidget
type ListWidget protected Widget;
type ListWidgetItem native;

private function set-items: ( &(ListWidget,Array[ListWidgetItem],Maybe[String]) NoExcept[-] )
    native 'qt-list-widget-set-items';

private function list-widget-item: ( &(String,String) ListWidgetItem )
    native 'qt-list-widget-item';

private function list-widget-item: ( &(String,Image::PNG,String) ListWidgetItem )
    native 'qt-list-widget-item-with-icon-png';

private function get-current-item: ( &(Static[ListWidget]) Maybe[String] )
    native 'qt-list-widget-get-current';

private function current-item: ( &(ListWidget) Signal[Maybe[String]] )
    (&(list)(signal list 'currentRowChanged(int)' get-current-item));
