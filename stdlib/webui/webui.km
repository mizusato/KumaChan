type Node   native;  // *vdom.Node
type Styles native;  // *vdom.Styles
type Attrs  native;  // *vdom.Attrs
type Events native;  // *vdom.Events
type EventOptions  native;  // *vdom.EventOptions
type EventPayload  native;  // *qt.WebUiEventPayload
type EventSink     protected Sink[EventPayload];
type NodeContent   native;  // vdom.NodeContent

public function zero-value: ( &() Styles )      native 'webui-dom-styles-zero';
public function zero-value: ( &() Attrs )       native 'webui-dom-attrs-zero';
public function zero-value: ( &() Events )      native 'webui-dom-events-zero';
public function zero-value: ( &() NodeContent ) native 'webui-dom-content-zero';


type MainLoop NoExcept[-];

public function webui-init: ( &(String,NoExcept*[Node]) MainLoop )
    native 'webui-init';

public const GetWindow: NoExcept[Qt::MainWindow]
    native 'WebUi::GetWindow';

public const ExitWhenWindowClosed: NoExcept[-]
    ~ then &(window) := GetWindow,
    listen (window.closed) (&(_)(exit 0));


public function dom-node: ( &(String,Styles,Attrs,Events,NodeContent) Node )
    native 'webui-dom-node';

public function dom-node: ( &(String,String) Node )
    ( &(tag, text)
        dom-node tag
        (dom-styles []) (dom-attrs []) (dom-events []) (dom-text text)
    );

public function dom-node: ( &(String,Array[Node]) Node )
    ( &(tag, children)
        dom-node tag
        (dom-styles []) (dom-attrs []) (dom-events []) (dom-children children)
    );

public function dom-node:
    ( &(String, {
        styles:  Styles,
        attrs:   Attrs,
        events:  Events,
        content: NodeContent
    }) Node )
    ( &(tag, props)
        let {styles,attrs,events,content} := props,
        (dom-node tag styles attrs events content)
    );


public function dom-styles: ( &(Map[String,String]) Styles )
    native 'webui-dom-styles';

public function dom-styles: ( &(Array[(String,String)]) Styles )
    (&(styles)(dom-styles (new-map styles)));


public function dom-attrs: ( &(Map[String,String]) Attrs )
    native 'webui-dom-attrs';

public function dom-attrs: ( &(Array[(String,String)]) Attrs )
    (&(attrs)(dom-attrs (new-map attrs)));


public function dom-events: ( &(Map[String,EventOptions]) Events )
    native 'webui-dom-events';

public function dom-events: ( &(Array[(String,EventOptions)]) Events )
    (&(events)(dom-events (new-map events)));

public function dom-event: ( &(String,EventSink) Events )
    (&(name,sink)(dom-events [(name, (dom-event No No sink))]));

public function dom-event: ( &(Bool,Bool,EventSink) EventOptions )
    native 'webui-dom-event';

public function dom-event-sink[T]: ( &(Sink[T],(&(EventPayload)(T))) EventSink )
    native 'webui-dom-event-sink';

public function dom-event-sink[T]: ( &(Bus[T],(&(EventPayload)(T))) EventSink )
    native 'webui-dom-event-sink';

public function dom-event-sink[T]: ( &(Latch[T],(&(T)(&(EventPayload)(T)))) EventSink )
    native 'webui-dom-event-sink-latch';


public function dom-text: ( &(String) NodeContent )
    native 'webui-dom-text';

public function dom-children: ( &(Array[Node]) NodeContent )
    native 'webui-dom-children';

public function get-string: ( &(EventPayload,String) String )
    native 'webui-event-payload-get-string';

public function get-float: ( &(EventPayload,String) Float )
    native 'webui-event-payload-get-float';
