type Object      native;  // qt.Object
type Signal[+T]  protected NoExcept*[T];
type Event[+T]   protected NoExcept*[T];
type Static[+O < Object]  opaque O;

type Icon native;

type EventResized {
    width:  Number,
    height: Number
};
type EventClosed {};

private function get-property[O < Object, T]: ( &(Static[O],String,String) T )
    native 'qt-get-property';

private function set-property[T]: ( &(Object,String,String,T) NoExcept[-] )
    native 'qt-set-property';

private function signal[O < Object, T]: ( &(O,String,(&(Static[O])(T))) Signal[T] )
    native 'qt-signal';
private function signal[T]: ( &(Object,String) Signal[-] )
    native 'qt-signal-no-payload';

private function event[E]: ( &(Object,String,Bool) Event[E] )
    native 'qt-event';

public function resized: ( &(Object) Event[EventResized] )
    (&(object)(event object 'resized' No));

public function closed: ( &(Object) Event[EventClosed] )
    (&(object)(event object 'closed' Yes));
