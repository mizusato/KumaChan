type ServiceIdentifier[Instance,Argument,Constructor,Consumer]
    native;

type ServerBackend native;
type ClientBackend native;
public function rpc-server-cleartext:
    ( & { network: String, addr: String } ServerBackend )
    native 'rpc-server-cleartext-net';
public function rpc-client-cleartext:
    ( & { network: String, addr: String } ClientBackend )
    native 'rpc-client-cleartext-net';

type ServerOptions { common: CommonOptions };
type ClientOptions { common: CommonOptions };
type CommonOptions {
    log:    LogOptions,
    limits: LimitOptions
};
public const CommonOptionsDefault: CommonOptions {};
public function zero-value: (&()(CommonOptions)) (&()(CommonOptionsDefault));
type LogOptions {
    enabled: Bool
};
public const LogOptionsDefault: LogOptions { enabled: Yes };
public function zero-value: (&()(LogOptions)) (&()(LogOptionsDefault));
type LimitOptions {
    send-timeout:      Number,
    recv-timeout:      Number,
    recv-interval:     Number,
    recv-max-obj-size: Number
};
public const LimitOptionsDefault: LimitOptions {
    send-timeout:      10000,
    recv-timeout:      0,
    recv-interval:     100,
    recv-max-obj-size: 33554432
};
public function zero-value: (&()(LimitOptions)) (&()(LimitOptionsDefault));

type Connection native;
public function wait-closed: ( &(Connection) Action[unit,Error] )
    native 'rpc-connection-wait-closed';
public function close: ( &(Connection) Action[unit] )
    native 'rpc-connection-close';

public function rpc-serve[Instance,Argument,Constructor,Consumer]:
    ( & {
        service:     ServiceIdentifier[Instance,Argument,Constructor,Consumer],
        backend:     ServerBackend,
        options:     ServerOptions,
        constructor: Constructor
    } Action[unit,Error] )
    native 'rpc-serve';

public function rpc-access[Instance,Argument,Constructor,Consumer]:
    ( & {
        service:  ServiceIdentifier[Instance,Argument,Constructor,Consumer],
        backend:  ClientBackend,
        options:  ClientOptions,
        argument: Argument,
        consumer: Consumer
    } Action[unit,Error] )
    native 'rpc-access';


