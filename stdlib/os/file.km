type File           native;  // rx.File
type FileReadOnly   protected File;
type FileWriteOnly  protected File;
type FileReadWrite  protected File;

type FileState  native;  // os.FileInfo
type FileMode   Uint32;
public function name: ( &(FileState) String )
    native 'file-state-name';
public function size: ( &(FileState) Uint64 )
    native 'file-state-size';
public function mode: ( &(FileState) FileMode )
    native 'file-state-mode';
public function is-dir: ( &(FileState) Bool )
    native 'file-state-is-dir';
public function last-modified: ( &(FileState) Time )
    native 'file-state-last-modified';

public function walk-dir: ( &(Path) Effect*[(Path,FileState),I/O::Error] )
    native 'walk-dir';
public function list-dir: ( &(Path) Effect*[(Path,FileState),I/O::Error] )
    native 'list-dir';

public function open-read-only: ( &(Path) Effect[FileReadOnly,I/O::Error] )
    native 'open-read-only';
public function open-read-write: ( &(Path) Effect[FileReadWrite,I/O::Error] )
    native 'open-read-write';
public function open-read-write-create: ( &(Path) Effect[FileReadWrite,I/O::Error] )
    native 'open-read-write-create';
public function open-overwrite: ( &(Path) Effect[FileWriteOnly,I/O::Error] )
    native 'open-overwrite';
public function open-append: ( &(Path) Effect[FileWriteOnly,I/O::Error] )
    native 'open-append';

public function close: ( &(File) NoExcept[-] )
    native 'file-close';

public function get-state: ( &(File) FileState )
    native 'file-get-state';

public function read:  ( &(FileReadOnly,Number) Effect[Bytes,I/O::Error] )
    native 'file-read';
public function read:  ( &(FileReadWrite,Number) Effect[Bytes,I/O::Error] )
    native 'file-read';
public function write: ( &(FileWriteOnly,Bytes) Effect[-,I/O::Error] )
    native 'file-write';
public function write: ( &(FileReadWrite,Bytes) Effect[-,I/O::Error] )
    native 'file-write';

public function seek-start:    ( &(File,Uint64) Effect[Uint64,I/O::Error] )
    native 'file-seek-start';
public function seek-forward:  ( &(File,Uint64) Effect[Uint64,I/O::Error] )
    native 'file-seek-forward';
public function seek-backward: ( &(File,Uint64) Effect[Uint64,I/O::Error] )
    native 'file-seek-backward';
public function seek-end:      ( &(File,Uint64) Effect[Uint64,I/O::Error] )
    native 'file-seek-end';

public function read-char:  ( &(FileReadOnly) Effect[Char,I/O::Error] )
    native 'file-read-char';
public function read-char:  ( &(FileReadWrite) Effect[Char,I/O::Error] )
    native 'file-read-char';
public function write-char: ( &(FileWriteOnly,Char) Effect[-,I/O::Error] )
    native 'file-write-char';
public function write-char: ( &(FileReadWrite,Char) Effect[-,I/O::Error] )
    native 'file-write-char';

public function read-line:  ( &(FileReadOnly) Effect[String,I/O::Error] )
    native 'file-read-line';
public function read-line:  ( &(FileReadWrite) Effect[String,I/O::Error] )
    native 'file-read-line';
public function write-line: ( &(FileWriteOnly,String) Effect[-,I/O::Error] )
    native 'file-write-line';
public function write-line: ( &(FileReadWrite,String) Effect[-,I/O::Error] )
    native 'file-write-line';

public function read-lines: ( &(FileReadOnly) Effect*[String,I/O::Error] )
    native 'file-read-lines';
public function read-lines: ( &(FileReadWrite) Effect*[String,I/O::Error] )
    native 'file-read-lines';
