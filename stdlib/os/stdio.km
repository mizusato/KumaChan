export const Stdin: FileReadOnly :=
    native 'OS::Stdin';
export const Stdout: FileWriteOnly :=
    native 'OS::Stdout';
export const Stderr: FileWriteOnly :=
    native 'OS::Stderr';

export function scan:
    &() => Action[String,Error]
    &() =>
        let read := Stdin.{read-string},
        if (Self::Name = 'windows'):
            (read map &(str) => str.{trim-suffix(''..\r)}),
        else:
            read;
export function print:
    &(String) => Action[unit,Error]
    &(s) => Stdout.{write-string(s)};
export function error:
    &(String) => Action[unit,Error]
    &(s) => Stderr.{write-string(s)};

export function scanln:
    &() => Action[String,Error]
    &() =>
        let read := Stdin.{read-line},
        if (Self::Name = 'windows'):
            (read map &(str) => str.{trim-suffix(''..\r)}),
        else:
            read;
export function println:
    &(String) => Action[unit,Error]
    &(l) => Stdout.{write-line(l)};
export function errorln:
    &(String) => Action[unit,Error]
    &(l) => Stderr.{write-line(l)};
